{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.initialState = initialState;\n        this.restart();\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"move\",\n            value: function move(direction) {\n                var _this = this;\n                if (this.status !== \"playing\") return;\n                var moveAnimations = [];\n                var mergeAnimations = [];\n                var moved = false;\n                var config = this.getMoveConfig(direction);\n                for(var i = 0; i < 4; i++){\n                    var line = this.getLine(i, config);\n                    var processedLine = this.processLine(line, i, config, moveAnimations, mergeAnimations);\n                    if (processedLine.moved) moved = true;\n                    this.setLine(i, processedLine.newLine, config);\n                }\n                if (moved) this.animateMove(moveAnimations, mergeAnimations, function() {\n                    _this.addRandomTile();\n                    _this.checkGameOver();\n                });\n            }\n        },\n        {\n            key: \"getMoveConfig\",\n            value: function getMoveConfig(direction) {\n                var _this = this;\n                var configs = {\n                    left: {\n                        extractLine: function(lineIndex) {\n                            return _this.board[lineIndex];\n                        },\n                        updateLine: function(lineIndex, newLine) {\n                            _this.board[lineIndex] = newLine;\n                        },\n                        getCoords: function(lineIndex, pos) {\n                            return {\n                                row: lineIndex,\n                                col: pos\n                            };\n                        },\n                        reverse: false,\n                        startPos: 0,\n                        increment: 1\n                    },\n                    right: {\n                        extractLine: function(lineIndex) {\n                            return _this.board[lineIndex];\n                        },\n                        updateLine: function(lineIndex, newLine) {\n                            _this.board[lineIndex] = newLine;\n                        },\n                        getCoords: function(lineIndex, pos) {\n                            return {\n                                row: lineIndex,\n                                col: pos\n                            };\n                        },\n                        reverse: true,\n                        startPos: 3,\n                        increment: -1\n                    },\n                    up: {\n                        extractLine: function(lineIndex) {\n                            return _this.board.map(function(row) {\n                                return row[lineIndex];\n                            });\n                        },\n                        updateLine: function(lineIndex, newLine) {\n                            for(var row = 0; row < 4; row++)_this.board[row][lineIndex] = newLine[row];\n                        },\n                        getCoords: function(lineIndex, pos) {\n                            return {\n                                row: pos,\n                                col: lineIndex\n                            };\n                        },\n                        reverse: false,\n                        startPos: 0,\n                        increment: 1\n                    },\n                    down: {\n                        extractLine: function(lineIndex) {\n                            return _this.board.map(function(row) {\n                                return row[lineIndex];\n                            });\n                        },\n                        updateLine: function(lineIndex, newLine) {\n                            for(var row = 0; row < 4; row++)_this.board[row][lineIndex] = newLine[row];\n                        },\n                        getCoords: function(lineIndex, pos) {\n                            return {\n                                row: pos,\n                                col: lineIndex\n                            };\n                        },\n                        reverse: true,\n                        startPos: 3,\n                        increment: -1\n                    }\n                };\n                return configs[direction];\n            }\n        },\n        {\n            key: \"getLine\",\n            value: function getLine(lineIndex, config) {\n                return config.extractLine(lineIndex);\n            }\n        },\n        {\n            key: \"setLine\",\n            value: function setLine(lineIndex, newLine, config) {\n                config.updateLine(lineIndex, newLine);\n            }\n        },\n        {\n            key: \"processLine\",\n            value: function processLine(line, lineIndex, config, moveAnimations, mergeAnimations) {\n                var nonZeroTiles = this.getNonZeroTiles(line, config);\n                var newLine = config.reverse ? [\n                    0,\n                    0,\n                    0,\n                    0\n                ] : [];\n                var targetPos = config.startPos;\n                var moved = false;\n                for(var k = 0; k < nonZeroTiles.length; k++){\n                    var current = nonZeroTiles[k];\n                    var next = nonZeroTiles[k + 1];\n                    if (next && current.value === next.value) {\n                        var mergedValue = current.value * 2;\n                        if (config.reverse) newLine[targetPos] = mergedValue;\n                        else newLine.push(mergedValue);\n                        this.addMoveAnimation(current, targetPos, lineIndex, config, moveAnimations);\n                        this.addMoveAnimation(next, targetPos, lineIndex, config, moveAnimations);\n                        mergeAnimations.push({\n                            position: config.getCoords(lineIndex, targetPos),\n                            value: mergedValue\n                        });\n                        this.score += mergedValue;\n                        k++;\n                        moved = true;\n                    } else {\n                        if (config.reverse) newLine[targetPos] = current.value;\n                        else newLine.push(current.value);\n                        if (current.from !== targetPos) {\n                            this.addMoveAnimation(current, targetPos, lineIndex, config, moveAnimations);\n                            moved = true;\n                        }\n                    }\n                    targetPos += config.increment;\n                }\n                if (!config.reverse) while(newLine.length < 4)newLine.push(0);\n                return {\n                    newLine: newLine,\n                    moved: moved\n                };\n            }\n        },\n        {\n            key: \"getNonZeroTiles\",\n            value: function getNonZeroTiles(line, config) {\n                var nonZeroTiles = [];\n                var positions = config.reverse ? [\n                    3,\n                    2,\n                    1,\n                    0\n                ] : [\n                    0,\n                    1,\n                    2,\n                    3\n                ];\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = positions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var pos = _step.value;\n                        if (line[pos] !== 0) nonZeroTiles.push({\n                            value: line[pos],\n                            from: pos,\n                            to: config.reverse ? 3 - nonZeroTiles.length : nonZeroTiles.length\n                        });\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                return nonZeroTiles;\n            }\n        },\n        {\n            key: \"addMoveAnimation\",\n            value: function addMoveAnimation(tile, targetPos, lineIndex, config, moveAnimations) {\n                moveAnimations.push({\n                    from: config.getCoords(lineIndex, tile.from),\n                    to: config.getCoords(lineIndex, targetPos),\n                    value: tile.value\n                });\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move(\"down\");\n            }\n        },\n        {\n            key: \"animateMove\",\n            value: function animateMove(moveAnimations, mergeAnimations, callback) {\n                var _this = this;\n                if (moveAnimations.length === 0) {\n                    callback();\n                    return;\n                }\n                var animatedTiles = [];\n                moveAnimations.forEach(function(animation) {\n                    var fromCell = document.querySelector('[data-position=\"'.concat(animation.from.row, \"-\").concat(animation.from.col, '\"]'));\n                    var toCell = document.querySelector('[data-position=\"'.concat(animation.to.row, \"-\").concat(animation.to.col, '\"]'));\n                    var animatedTile = document.createElement(\"div\");\n                    animatedTile.className = \"field-cell field-cell--\".concat(animation.value);\n                    animatedTile.textContent = animation.value;\n                    var fromRect = fromCell.getBoundingClientRect();\n                    var gameField = document.querySelector(\".game-field\");\n                    var fieldRect = gameField.getBoundingClientRect();\n                    animatedTile.style.position = \"absolute\";\n                    animatedTile.style.left = \"\".concat(fromRect.left - fieldRect.left, \"px\");\n                    animatedTile.style.top = \"\".concat(fromRect.top - fieldRect.top, \"px\");\n                    animatedTile.style.width = \"\".concat(fromRect.width, \"px\");\n                    animatedTile.style.height = \"\".concat(fromRect.height, \"px\");\n                    animatedTile.style.zIndex = \"10\";\n                    animatedTile.style.transition = \"all 0.2s ease-in-out\";\n                    gameField.style.position = \"relative\";\n                    gameField.appendChild(animatedTile);\n                    animatedTiles.push(animatedTile);\n                    fromCell.textContent = \"\";\n                    fromCell.className = \"field-cell\";\n                    requestAnimationFrame(function() {\n                        var toRect = toCell.getBoundingClientRect();\n                        animatedTile.style.left = \"\".concat(toRect.left - fieldRect.left, \"px\");\n                        animatedTile.style.top = \"\".concat(toRect.top - fieldRect.top, \"px\");\n                    });\n                });\n                setTimeout(function() {\n                    animatedTiles.forEach(function(tile) {\n                        return tile.remove();\n                    });\n                    _this.updateDisplay();\n                    mergeAnimations.forEach(function(merge) {\n                        var cell = document.querySelector('[data-position=\"'.concat(merge.position.row, \"-\").concat(merge.position.col, '\"]'));\n                        cell.classList.add(\"field-cell--merged\");\n                        setTimeout(function() {\n                            cell.classList.remove(\"field-cell--merged\");\n                        }, 150);\n                    });\n                    callback();\n                }, 200);\n            }\n        },\n        {\n            key: \"updateDisplay\",\n            value: function updateDisplay() {\n                var _this = this;\n                var state = this.getState();\n                state.forEach(function(row, rowIndex) {\n                    row.forEach(function(value, colIndex) {\n                        var cell = document.querySelector('[data-position=\"'.concat(rowIndex, \"-\").concat(colIndex, '\"]'));\n                        cell.textContent = value !== 0 ? value : \"\";\n                        _this.updateCellClass(cell, value);\n                    });\n                });\n            }\n        },\n        {\n            key: \"updateCellClass\",\n            value: function updateCellClass(cell, value) {\n                var hasNewClass = cell.classList.contains(\"field-cell--new\");\n                var hasMergedClass = cell.classList.contains(\"field-cell--merged\");\n                var classesToRemove = [];\n                cell.classList.forEach(function(className) {\n                    if (className.startsWith(\"field-cell--\") && !className.includes(\"new\") && !className.includes(\"merged\")) classesToRemove.push(className);\n                });\n                classesToRemove.forEach(function(className) {\n                    return cell.classList.remove(className);\n                });\n                if (value !== 0) cell.classList.add(\"field-cell--\".concat(value));\n                if (hasNewClass) cell.classList.add(\"field-cell--new\");\n                if (hasMergedClass) cell.classList.add(\"field-cell--merged\");\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.board.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = \"win\";\n                else if (!this.canMove()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.board[i][j] === 0) return true;\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return true;\n                    if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                this.board.forEach(function(row, rowIndex) {\n                    row.forEach(function(value, colIndex) {\n                        if (value === 0) emptyCells.push({\n                            rowIndex: rowIndex,\n                            colIndex: colIndex\n                        });\n                    });\n                });\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = emptyCells[randomIndex], rowIndex = _emptyCells_randomIndex.rowIndex, colIndex = _emptyCells_randomIndex.colIndex;\n                    this.board[rowIndex][colIndex] = Math.random() < 0.9 ? 2 : 4;\n                    var cell = document.querySelector('[data-position=\"'.concat(rowIndex, \"-\").concat(colIndex, '\"]'));\n                    cell.textContent = this.board[rowIndex][colIndex];\n                    this.updateCellClass(cell, this.board[rowIndex][colIndex]);\n                    requestAnimationFrame(function() {\n                        cell.classList.add(\"field-cell--new\");\n                        setTimeout(function() {\n                            cell.classList.remove(\"field-cell--new\");\n                        }, 300);\n                    });\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$startButton = document.getElementById(\"startButton\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messagePlaying = document.querySelector(\".message-playing\");\nfunction $197cd56b15c33885$var$updateBoard() {\n    $197cd56b15c33885$var$game.updateDisplay();\n}\nfunction $197cd56b15c33885$var$updateScore() {\n    $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$updateMessages() {\n    var status = $197cd56b15c33885$var$game.getStatus();\n    if (status === \"win\") {\n        $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messagePlaying.classList.add(\"hidden\");\n    } else if (status === \"lose\") {\n        $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messagePlaying.classList.add(\"hidden\");\n    } else if (status === \"playing\") {\n        $197cd56b15c33885$var$messagePlaying.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    } else {\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messagePlaying.classList.add(\"hidden\");\n    }\n}\n$197cd56b15c33885$var$startButton.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$startButton.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$updateBoard();\n        $197cd56b15c33885$var$updateMessages();\n        $197cd56b15c33885$var$startButton.classList.remove(\"start\");\n        $197cd56b15c33885$var$startButton.classList.add(\"restart\");\n        $197cd56b15c33885$var$startButton.textContent = \"Restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$updateBoard();\n        $197cd56b15c33885$var$updateScore();\n        $197cd56b15c33885$var$updateMessages();\n        $197cd56b15c33885$var$startButton.classList.remove(\"restart\");\n        $197cd56b15c33885$var$startButton.classList.add(\"start\");\n        $197cd56b15c33885$var$startButton.textContent = \"Start\";\n    }\n});\nvar $197cd56b15c33885$var$isAnimating = false;\nwindow.addEventListener(\"keydown\", function(event) {\n    if ($197cd56b15c33885$var$isAnimating) return;\n    switch(event.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$isAnimating = true;\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$isAnimating = true;\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$isAnimating = true;\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$isAnimating = true;\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    setTimeout(function() {\n        $197cd56b15c33885$var$updateScore();\n        $197cd56b15c33885$var$updateMessages();\n        $197cd56b15c33885$var$isAnimating = false;\n    }, 350);\n});\n\n})();\n//# sourceMappingURL=index.b5a199e8.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst scoreElement = document.querySelector('.game-score');\nconst startButton = document.getElementById('startButton');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messagePlaying = document.querySelector('.message-playing');\n\nfunction updateBoard() {\n  game.updateDisplay();\n}\n\nfunction updateScore() {\n  scoreElement.textContent = game.getScore();\n}\n\nfunction updateMessages() {\n  const status = game.getStatus();\n\n  if (status === 'win') {\n    messageWin.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    messagePlaying.classList.add('hidden');\n  } else if (status === 'lose') {\n    messageLose.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageStart.classList.add('hidden');\n    messagePlaying.classList.add('hidden');\n  } else if (status === 'playing') {\n    messagePlaying.classList.remove('hidden');\n    messageStart.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n  } else {\n    messageStart.classList.remove('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messagePlaying.classList.add('hidden');\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  if (startButton.classList.contains('start')) {\n    game.start();\n    updateBoard();\n    updateMessages();\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    startButton.textContent = 'Restart';\n  } else {\n    game.restart();\n    updateBoard();\n    updateScore();\n    updateMessages();\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.textContent = 'Start';\n  }\n});\n\nlet isAnimating = false;\n\nwindow.addEventListener('keydown', (event) => {\n  if (isAnimating) {\n    return;\n  }\n\n  switch (event.key) {\n    case 'ArrowLeft':\n      isAnimating = true;\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      isAnimating = true;\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      isAnimating = true;\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      isAnimating = true;\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  setTimeout(() => {\n    updateScore();\n    updateMessages();\n    isAnimating = false;\n  }, 350);\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.initialState = initialState;\n    this.restart();\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const moveAnimations = [];\n    const mergeAnimations = [];\n    let moved = false;\n\n    const config = this.getMoveConfig(direction);\n\n    for (let i = 0; i < 4; i++) {\n      const line = this.getLine(i, config);\n      const processedLine\n        = this.processLine(line, i, config, moveAnimations, mergeAnimations);\n\n      if (processedLine.moved) {\n        moved = true;\n      }\n\n      this.setLine(i, processedLine.newLine, config);\n    }\n\n    if (moved) {\n      this.animateMove(moveAnimations, mergeAnimations, () => {\n        this.addRandomTile();\n        this.checkGameOver();\n      });\n    }\n  }\n\n  getMoveConfig(direction) {\n    const configs = {\n      left: {\n        extractLine: (lineIndex) => this.board[lineIndex],\n        updateLine: (lineIndex, newLine) => {\n          this.board[lineIndex] = newLine;\n        },\n        getCoords: (lineIndex, pos) => ({\n          row: lineIndex, col: pos,\n        }),\n        reverse: false,\n        startPos: 0,\n        increment: 1,\n      },\n      right: {\n        extractLine: (lineIndex) => this.board[lineIndex],\n        updateLine: (lineIndex, newLine) => {\n          this.board[lineIndex] = newLine;\n        },\n        getCoords: (lineIndex, pos) => ({\n          row: lineIndex, col: pos,\n        }),\n        reverse: true,\n        startPos: 3,\n        increment: -1,\n      },\n      up: {\n        extractLine: (lineIndex) => this.board.map(row => row[lineIndex]),\n        updateLine: (lineIndex, newLine) => {\n          for (let row = 0; row < 4; row++) {\n            this.board[row][lineIndex] = newLine[row];\n          }\n        },\n        getCoords: (lineIndex, pos) => ({\n          row: pos, col: lineIndex,\n        }),\n        reverse: false,\n        startPos: 0,\n        increment: 1,\n      },\n      down: {\n        extractLine: (lineIndex) => this.board.map(row => row[lineIndex]),\n        updateLine: (lineIndex, newLine) => {\n          for (let row = 0; row < 4; row++) {\n            this.board[row][lineIndex] = newLine[row];\n          }\n        },\n        getCoords: (lineIndex, pos) => ({\n          row: pos, col: lineIndex,\n        }),\n        reverse: true,\n        startPos: 3,\n        increment: -1,\n      },\n    };\n\n    return configs[direction];\n  }\n\n  getLine(lineIndex, config) {\n    return config.extractLine(lineIndex);\n  }\n\n  setLine(lineIndex, newLine, config) {\n    config.updateLine(lineIndex, newLine);\n  }\n\n  processLine(line, lineIndex, config, moveAnimations, mergeAnimations) {\n    const nonZeroTiles = this.getNonZeroTiles(line, config);\n    const newLine = config.reverse ? [0, 0, 0, 0] : [];\n    let targetPos = config.startPos;\n    let moved = false;\n\n    for (let k = 0; k < nonZeroTiles.length; k++) {\n      const current = nonZeroTiles[k];\n      const next = nonZeroTiles[k + 1];\n\n      if (next && current.value === next.value) {\n        const mergedValue = current.value * 2;\n\n        if (config.reverse) {\n          newLine[targetPos] = mergedValue;\n        } else {\n          newLine.push(mergedValue);\n        }\n\n        this.addMoveAnimation(\n          current, targetPos, lineIndex, config, moveAnimations);\n\n        this.addMoveAnimation(\n          next, targetPos, lineIndex, config, moveAnimations);\n\n        mergeAnimations.push({\n          position: config.getCoords(lineIndex, targetPos),\n          value: mergedValue,\n        });\n\n        this.score += mergedValue;\n        k++;\n        moved = true;\n      } else {\n        if (config.reverse) {\n          newLine[targetPos] = current.value;\n        } else {\n          newLine.push(current.value);\n        }\n\n        if (current.from !== targetPos) {\n          this.addMoveAnimation(\n            current, targetPos, lineIndex, config, moveAnimations);\n          moved = true;\n        }\n      }\n\n      targetPos += config.increment;\n    }\n\n    if (!config.reverse) {\n      while (newLine.length < 4) {\n        newLine.push(0);\n      }\n    }\n\n    return {\n      newLine, moved,\n    };\n  }\n\n  getNonZeroTiles(line, config) {\n    const nonZeroTiles = [];\n    const positions = config.reverse ? [3, 2, 1, 0] : [0, 1, 2, 3];\n\n    for (const pos of positions) {\n      if (line[pos] !== 0) {\n        nonZeroTiles.push({\n          value: line[pos],\n          from: pos,\n          to: config.reverse ? 3 - nonZeroTiles.length : nonZeroTiles.length,\n        });\n      }\n    }\n\n    return nonZeroTiles;\n  }\n\n  addMoveAnimation(tile, targetPos, lineIndex, config, moveAnimations) {\n    moveAnimations.push({\n      from: config.getCoords(lineIndex, tile.from),\n      to: config.getCoords(lineIndex, targetPos),\n      value: tile.value,\n    });\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n\n  moveUp() {\n    this.move('up');\n  }\n\n  moveDown() {\n    this.move('down');\n  }\n\n  animateMove(moveAnimations, mergeAnimations, callback) {\n    if (moveAnimations.length === 0) {\n      callback();\n\n      return;\n    }\n\n    const animatedTiles = [];\n\n    moveAnimations.forEach(animation => {\n      const fromCell = document.querySelector(\n        `[data-position=\"${animation.from.row}-${animation.from.col}\"]`,\n      );\n      const toCell = document.querySelector(\n        `[data-position=\"${animation.to.row}-${animation.to.col}\"]`,\n      );\n\n      const animatedTile = document.createElement('div');\n\n      animatedTile.className\n        = `field-cell field-cell--${animation.value}`;\n      animatedTile.textContent = animation.value;\n\n      const fromRect = fromCell.getBoundingClientRect();\n      const gameField = document.querySelector('.game-field');\n      const fieldRect = gameField.getBoundingClientRect();\n\n      animatedTile.style.position = 'absolute';\n      animatedTile.style.left = `${fromRect.left - fieldRect.left}px`;\n      animatedTile.style.top = `${fromRect.top - fieldRect.top}px`;\n      animatedTile.style.width = `${fromRect.width}px`;\n      animatedTile.style.height = `${fromRect.height}px`;\n      animatedTile.style.zIndex = '10';\n      animatedTile.style.transition = 'all 0.2s ease-in-out';\n\n      gameField.style.position = 'relative';\n      gameField.appendChild(animatedTile);\n      animatedTiles.push(animatedTile);\n\n      fromCell.textContent = '';\n      fromCell.className = 'field-cell';\n\n      requestAnimationFrame(() => {\n        const toRect = toCell.getBoundingClientRect();\n\n        animatedTile.style.left = `${toRect.left - fieldRect.left}px`;\n        animatedTile.style.top = `${toRect.top - fieldRect.top}px`;\n      });\n    });\n\n    setTimeout(() => {\n      animatedTiles.forEach(tile => tile.remove());\n\n      this.updateDisplay();\n\n      mergeAnimations.forEach(merge => {\n        const cell = document.querySelector(\n          `[data-position=\"${merge.position.row}-${merge.position.col}\"]`,\n        );\n\n        cell.classList.add('field-cell--merged');\n\n        setTimeout(() => {\n          cell.classList.remove('field-cell--merged');\n        }, 150);\n      });\n\n      callback();\n    }, 200);\n  }\n\n  updateDisplay() {\n    const state = this.getState();\n\n    state.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        const cell = document.querySelector(\n          `[data-position=\"${rowIndex}-${colIndex}\"]`,\n        );\n\n        cell.textContent = value !== 0 ? value : '';\n\n        this.updateCellClass(cell, value);\n      });\n    });\n  }\n\n  updateCellClass(cell, value) {\n    const hasNewClass = cell.classList.contains('field-cell--new');\n    const hasMergedClass = cell.classList.contains('field-cell--merged');\n\n    const classesToRemove = [];\n\n    cell.classList.forEach(className => {\n      if (className.startsWith('field-cell--')\n          && !className.includes('new')\n          && !className.includes('merged')) {\n        classesToRemove.push(className);\n      }\n    });\n    classesToRemove.forEach(className => cell.classList.remove(className));\n\n    if (value !== 0) {\n      cell.classList.add(`field-cell--${value}`);\n    }\n\n    if (hasNewClass) {\n      cell.classList.add('field-cell--new');\n    }\n\n    if (hasMergedClass) {\n      cell.classList.add('field-cell--merged');\n    }\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  restart() {\n    this.board = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  checkGameOver() {\n    if (this.board.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    } else if (!this.canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  canMove() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          return true;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return true;\n        }\n\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    this.board.forEach((row, rowIndex) => {\n      row.forEach((value, colIndex) => {\n        if (value === 0) {\n          emptyCells.push({\n            rowIndex,\n            colIndex,\n          });\n        }\n      });\n    });\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const { rowIndex, colIndex } = emptyCells[randomIndex];\n\n      this.board[rowIndex][colIndex] = Math.random() < 0.9 ? 2 : 4;\n\n      const cell = document.querySelector(\n        `[data-position=\"${rowIndex}-${colIndex}\"]`,\n      );\n\n      cell.textContent = this.board[rowIndex][colIndex];\n      this.updateCellClass(cell, this.board[rowIndex][colIndex]);\n\n      requestAnimationFrame(() => {\n        cell.classList.add('field-cell--new');\n\n        setTimeout(() => {\n          cell.classList.remove('field-cell--new');\n        }, 300);\n      });\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","restart","key","value","direction","_this","status","moveAnimations","mergeAnimations","moved","config","getMoveConfig","line","getLine","processedLine","processLine","setLine","newLine","animateMove","addRandomTile","checkGameOver","configs","left","extractLine","lineIndex","board","updateLine","getCoords","pos","row","col","reverse","startPos","increment","right","up","map","down","nonZeroTiles","getNonZeroTiles","targetPos","k","current","next","mergedValue","push","addMoveAnimation","position","score","positions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","done","to","err","return","tile","move","callback","animatedTiles","forEach","animation","fromCell","document","querySelector","concat","toCell","animatedTile","createElement","className","textContent","fromRect","getBoundingClientRect","gameField","fieldRect","style","top","width","height","zIndex","transition","appendChild","requestAnimationFrame","toRect","setTimeout","remove","updateDisplay","merge","cell","classList","add","state","getState","rowIndex","colIndex","updateCellClass","hasNewClass","contains","hasMergedClass","classesToRemove","startsWith","includes","some","canMove","j","emptyCells","randomIndex","Math","floor","random","_emptyCells_randomIndex","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$startButton","getElementById","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messagePlaying","$197cd56b15c33885$var$updateBoard","$197cd56b15c33885$var$updateScore","getScore","$197cd56b15c33885$var$updateMessages","getStatus","addEventListener","start","$197cd56b15c33885$var$isAnimating","window","event","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.b5a199e8.js.map"}